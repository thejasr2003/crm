generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  userName    String   @unique
  wbEmailId   String?  @unique
  password    String
  phoneNumber String?
  role        Role     @default(SALES)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Agreement {
  id              Int            @id @default(autoincrement())
  clientName      String
  employeeName    String?
  //employeeId    String?
  type            AgreementType?
  technology      Technology?
  otherTechnology String?
  poNumber        Int?
  startDate       DateTime?
  endDate         DateTime?
  fileUpload      String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Requirement {
  id              Int      @id @default(autoincrement())
  requirementName String
  companyName     String
  jobDescription  String
  jdImage         String? 
  experience      Int
  noticePeriod    Int
  positions       Int
  primarySkills   String
  secondarySkills String
  closePositions  String
  requirementType String
  workLocation    String
  budget          Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Lead {
  id                     Int                @id @default(autoincrement())
  salesName              String
  companyName            String
  companyID              String?               
  numberOfEmployees      Int                @default(0)
  employeeName           String?
  replacementToDate      DateTime?
  replacementRequestDate DateTime?
  createdAt              DateTime           @default(now())
  updatedAt              DateTime           @updatedAt
  status                 LeadStatus         @default(prospective)
  companyNameGST         String?
  companySelect          String?
  companysize            String?
  industry               Industry?
  percentage             Int?
  remarks                String?
  technology             Technology?
  technologyOther        String?            // <-- Added for specifying 'other' technology
  replacementReason      ReplacementReason?
  leadType               LeadType           // Make this LeadType? (optional) if you need to migrate
  businessType           String?
  spocs                  Spoc[]
}

model Spoc {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  contact     String
  altContact  String?
  designation String
  location    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  leadId      Int
  lead        Lead     @relation(fields: [leadId], references: [id])
}

enum Role {
  ADMIN
  RECRUITER
  SALES
  ACCOUNT_MANAGER
}

enum AgreementType {
  MSA
  NDA
  SOW
  PO
}

enum LeadStatus {
  prospective
  newlead
  existing
  deal
  NEW
}

enum LeadType {
  prospective
  new
  existing
  deal
}

enum ReplacementReason {
  resigned
  performance_issue
  employee_concern
}

enum Technology {
  development
  testing
  devops
  ai_ml
  ai
  digital_marketing
  data_analytics
  other
}

enum Industry {
  it
  finance
  healthcare
  manufacturing
  retail
  education
  telecom
  automobile
  realestate
  logistics
  media
  government
  energy
  consulting
  other
}